[{"E:\\languge_project\\react\\react-material-admin\\src\\index.js":"1","E:\\languge_project\\react\\react-material-admin\\src\\serviceWorker.js":"2","E:\\languge_project\\react\\react-material-admin\\src\\components\\App.js":"3","E:\\languge_project\\react\\react-material-admin\\src\\context\\UserContext.js":"4","E:\\languge_project\\react\\react-material-admin\\src\\context\\LayoutContext.js":"5","E:\\languge_project\\react\\react-material-admin\\src\\themes\\index.js":"6","E:\\languge_project\\react\\react-material-admin\\src\\pages\\error\\Error.js":"7","E:\\languge_project\\react\\react-material-admin\\src\\themes\\default.js":"8","E:\\languge_project\\react\\react-material-admin\\src\\components\\Layout\\Layout.js":"9","E:\\languge_project\\react\\react-material-admin\\src\\pages\\login\\Login.js":"10","E:\\languge_project\\react\\react-material-admin\\src\\pages\\error\\styles.js":"11","E:\\languge_project\\react\\react-material-admin\\src\\components\\forms\\VideoForm.js":"12","E:\\languge_project\\react\\react-material-admin\\src\\pages\\login\\styles.js":"13","E:\\languge_project\\react\\react-material-admin\\src\\components\\Collection\\CollectionDetail.js":"14","E:\\languge_project\\react\\react-material-admin\\src\\pages\\Collection\\Collection.js":"15","E:\\languge_project\\react\\react-material-admin\\src\\components\\Layout\\styles.js":"16","E:\\languge_project\\react\\react-material-admin\\src\\pages\\icons\\Icons.js":"17","E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js":"18","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js":"19","E:\\languge_project\\react\\react-material-admin\\src\\components\\Header\\Header.js":"20","E:\\languge_project\\react\\react-material-admin\\src\\components\\Dialogs\\DialogCollection.js":"21","E:\\languge_project\\react\\react-material-admin\\src\\components\\Collection\\QrCode.js":"22","E:\\languge_project\\react\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js":"23","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\mock.js":"24","E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js":"25","E:\\languge_project\\react\\react-material-admin\\src\\components\\Header\\styles.js":"26","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\styles.js":"27","E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\styles.js":"28","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"29","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js":"30","E:\\languge_project\\react\\react-material-admin\\src\\pages\\icons\\styles.js":"31","E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"32","E:\\languge_project\\react\\react-material-admin\\src\\components\\Widget\\Widget.js":"33","E:\\languge_project\\react\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js":"34","E:\\languge_project\\react\\react-material-admin\\src\\components\\PageTitle\\styles.js":"35","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"36","E:\\languge_project\\react\\react-material-admin\\src\\components\\Widget\\styles.js":"37","E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"38","E:\\languge_project\\react\\react-material-admin\\src\\pages\\users\\users.js":"39"},{"size":896,"mtime":1636445989226,"results":"40","hashOfConfig":"41"},{"size":5083,"mtime":1636445989254,"results":"42","hashOfConfig":"41"},{"size":1787,"mtime":1643404990615,"results":"43","hashOfConfig":"41"},{"size":2643,"mtime":1643934612841,"results":"44","hashOfConfig":"41"},{"size":1454,"mtime":1636453229340,"results":"45","hashOfConfig":"41"},{"size":534,"mtime":1636445989256,"results":"46","hashOfConfig":"41"},{"size":1626,"mtime":1636445989238,"results":"47","hashOfConfig":"41"},{"size":3127,"mtime":1636445989256,"results":"48","hashOfConfig":"41"},{"size":1677,"mtime":1643853902772,"results":"49","hashOfConfig":"41"},{"size":8094,"mtime":1643933197799,"results":"50","hashOfConfig":"41"},{"size":1395,"mtime":1636445989239,"results":"51","hashOfConfig":"41"},{"size":10117,"mtime":1643929341791,"results":"52","hashOfConfig":"41"},{"size":3281,"mtime":1636445989246,"results":"53","hashOfConfig":"41"},{"size":2241,"mtime":1643929301886,"results":"54","hashOfConfig":"41"},{"size":8499,"mtime":1643929292400,"results":"55","hashOfConfig":"41"},{"size":710,"mtime":1636445989171,"results":"56","hashOfConfig":"41"},{"size":391433,"mtime":1636445989243,"results":"57","hashOfConfig":"41"},{"size":3120,"mtime":1643921198442,"results":"58","hashOfConfig":"41"},{"size":16126,"mtime":1636445989232,"results":"59","hashOfConfig":"41"},{"size":6301,"mtime":1643934246005,"results":"60","hashOfConfig":"41"},{"size":1072,"mtime":1643916309098,"results":"61","hashOfConfig":"41"},{"size":1655,"mtime":1643921198441,"results":"62","hashOfConfig":"41"},{"size":447,"mtime":1636445989176,"results":"63","hashOfConfig":"41"},{"size":4288,"mtime":1636445989236,"results":"64","hashOfConfig":"41"},{"size":902,"mtime":1636445989179,"results":"65","hashOfConfig":"41"},{"size":4043,"mtime":1636445989170,"results":"66","hashOfConfig":"41"},{"size":3000,"mtime":1636445989237,"results":"67","hashOfConfig":"41"},{"size":1363,"mtime":1636445989181,"results":"68","hashOfConfig":"41"},{"size":4160,"mtime":1636445989233,"results":"69","hashOfConfig":"41"},{"size":1323,"mtime":1636445989236,"results":"70","hashOfConfig":"41"},{"size":812,"mtime":1636445989244,"results":"71","hashOfConfig":"41"},{"size":4867,"mtime":1636453442049,"results":"72","hashOfConfig":"41"},{"size":2581,"mtime":1636445989217,"results":"73","hashOfConfig":"41"},{"size":3971,"mtime":1636445989221,"results":"74","hashOfConfig":"41"},{"size":482,"mtime":1636445989177,"results":"75","hashOfConfig":"41"},{"size":1075,"mtime":1636445989234,"results":"76","hashOfConfig":"41"},{"size":1015,"mtime":1636445989220,"results":"77","hashOfConfig":"41"},{"size":1474,"mtime":1636445989180,"results":"78","hashOfConfig":"41"},{"size":80,"mtime":1643934592417,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"vir0dg",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"E:\\languge_project\\react\\react-material-admin\\src\\index.js",[],["168","169"],"E:\\languge_project\\react\\react-material-admin\\src\\serviceWorker.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\App.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\context\\UserContext.js",["170"],"import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UserStateContext = React.createContext();\r\nconst UserDispatchContext = React.createContext();\r\n\r\nfunction userReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN_SUCCESS\":\r\n      return { ...state, isAuthenticated: true };\r\n    case \"SIGN_OUT_SUCCESS\":\r\n      return { ...state, isAuthenticated: false };\r\n    case \"LOGIN_FAILURE\":\r\n      return { ...state, isAuthenticated: false };\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction UserProvider({ children }) {\r\n  const [state, dispatch] = React.useReducer(userReducer, {\r\n    isAuthenticated: !!localStorage.getItem(\"token\"),\r\n  });\r\n\r\n  return (\r\n    <UserStateContext.Provider value={state}>\r\n      <UserDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useUserState() {\r\n  const context = React.useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserState must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useUserDispatch() {\r\n  const context = React.useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useUserDispatch must be used within a UserProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport { UserProvider, useUserState, useUserDispatch, loginUser, signOut };\r\n\r\n// ###########################################################\r\n\r\nasync function loginUser(dispatch, login, password, history, setIsLoading, setError) {\r\n  setError(false);\r\n  setIsLoading(true);\r\n  try {\r\n    const res = await axios.post(\"https://auth-security.herokuapp.com/users/login\", { username: login, password });\r\n    if (res.status >= 200 && res.status <= 299) {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"username\", res.data.user.username);\r\n      localStorage.setItem(\"role\", res.data.user.role);\r\n      setError(null);\r\n      setIsLoading(false);\r\n      dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      history.push(\"/app/dashboard\");\r\n    } else {\r\n      console.log(\"error \", res);\r\n      dispatch({ type: \"LOGIN_FAILURE\" });\r\n      setError(true);\r\n      setIsLoading(false);\r\n    }\r\n  } catch (e) {\r\n    dispatch({ type: \"LOGIN_FAILURE\" });\r\n    setError(true);\r\n    setIsLoading(false);\r\n  }\r\n\r\n}\r\n\r\nfunction signOut(dispatch, history) {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"username\");\r\n  localStorage.removeItem(\"role\");\r\n  dispatch({ type: \"SIGN_OUT_SUCCESS\" });\r\n  history.push(\"/login\");\r\n}\r\n","E:\\languge_project\\react\\react-material-admin\\src\\context\\LayoutContext.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\themes\\index.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\error\\Error.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\themes\\default.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Layout\\Layout.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\login\\Login.js",["171","172","173"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, loginUser, useUserState } from \"../../context/UserContext\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nfunction Login(props) {\r\n  const classes = useStyles();\r\n\r\n  // global\r\n  const userDispatch = useUserDispatch();\r\n  let { isAuthenticated } = useUserState();\r\n\r\n  // local\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [activeTabId, setActiveTabId] = useState(0);\r\n  const [nameValue, setNameValue] = useState(\"\");\r\n  const [loginValue, setLoginValue] = useState(\"\");\r\n  const [passwordValue, setPasswordValue] = useState(\"\");\r\n  const [clicked, setIsClicked] = useState(false);\r\n  const loginMethod = () => {\r\n    loginUser(\r\n      userDispatch,\r\n      loginValue,\r\n      passwordValue,\r\n      props.history,\r\n      setIsLoading,\r\n      setError,\r\n    );\r\n    setIsClicked(true);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer}>\r\n        <img src={logo} alt=\"logo\" className={classes.logotypeImage} />\r\n        <Typography className={classes.logotypeText}> VIDQR<sup>©</sup></Typography>\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n            {/*<Tab label=\"New User\" classes={{ root: classes.tab }} />*/}\r\n          </Tabs>\r\n          {activeTabId === 0 && (\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      loginMethod()\r\n                    }\r\n                    constiant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </React.Fragment>\r\n          )}\r\n          {activeTabId === 1 && (\r\n            <React.Fragment>\r\n              <Typography constiant=\"h1\" className={classes.greeting}>\r\n                Welcome!\r\n              </Typography>\r\n              <Typography constiant=\"h2\" className={classes.subGreeting}>\r\n                Create your account\r\n              </Typography>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :(\r\n                </Typography>\r\n              </Fade>\r\n              <TextField\r\n                id=\"name\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={nameValue}\r\n                onChange={e => setNameValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Full Name\"\r\n                type=\"text\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.creatingButtonContainer}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} />\r\n                ) : (\r\n                  <Button\r\n                    onClick={() =>\r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                      )\r\n                    }\r\n                    disabled={\r\n                      loginValue.length === 0 ||\r\n                      passwordValue.length === 0 ||\r\n                      nameValue.length === 0\r\n                    }\r\n                    size=\"large\"\r\n                    constiant=\"contained\"\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    className={classes.createAccountButton}\r\n                  >\r\n                    Create your account\r\n                  </Button>\r\n                )}\r\n              </div>\r\n              <div className={classes.formDividerContainer}>\r\n                <div className={classes.formDivider} />\r\n                <Typography className={classes.formDividerWord}>or</Typography>\r\n                <div className={classes.formDivider} />\r\n              </div>\r\n              <Button\r\n                size=\"large\"\r\n                className={classnames(\r\n                  classes.googleButton,\r\n                  classes.googleButtonCreating,\r\n                )}\r\n              >\r\n                <img src={google} alt=\"google\" className={classes.googleIcon} />\r\n                &nbsp;Sign in with Google\r\n              </Button>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","E:\\languge_project\\react\\react-material-admin\\src\\pages\\error\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\forms\\VideoForm.js",["174","175","176"],"import * as React from 'react';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport './style.css';\r\nimport { Button, Divider, IconButton, InputLabel, MenuItem, Select } from '@material-ui/core';\r\nimport ImageUpload from 'image-upload-react'\r\nimport { doc } from 'prettier';\r\nimport axios from \"axios\";\r\nimport { PhotoCamera, Videocam } from '@material-ui/icons';\r\nimport * as Yup from \"yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Typography } from '@mui/material';\r\n\r\nexport default function VideoForm() {\r\n    //handle image uploader\r\n    const [imageSrc, setImageSrc] = React.useState(\"\")\r\n\r\n    const handleImageSelect = (e) => {\r\n        setImageSrc(URL.createObjectURL(e.target.files[0]))\r\n        setVideo({ ...video, image_src: e.target.files[0] });\r\n    }\r\n\r\n\r\n    //handle video uploader\r\n\r\n    const [link, setLink] = React.useState(\"Upload Video\");\r\n\r\n    const handleVideoSelect = (e) => {\r\n        setLink(e.target.files[0].name);\r\n        setVideo({ ...video, url: e.target.files[0] });\r\n    };\r\n\r\n    //form building\r\n    const api_url = \"http://localhost:8080/vidqr/collections/\";\r\n    const api_url_video = \"http://localhost:8080/vidqr/video/\";\r\n    const [collections, setCollections] = React.useState([]);\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [video, setVideo] = React.useState({\r\n        name: \"\",\r\n        url: \"\",\r\n        description: \"\",\r\n        image_src: null,\r\n        collection: \"\",\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    const getData = () => {\r\n        fetch(api_url)\r\n            .then(res => res.json())\r\n            .then(json => setCollections(json));\r\n    };\r\n    //handle submit form\r\n\r\n    const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    const handleChangeForm = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.name === \"image_src\") setVideo({ ...video, image_src: e.target.files[0] });\r\n        else {\r\n            setVideo({ ...video, [e.target.name]: e.target.value });\r\n        }\r\n        console.log(\"video \", video);\r\n    }\r\n\r\n    const handleChangeFormSelect = (e) => {\r\n        e.preventDefault();\r\n        setVideo({ ...video, collection: e.target.value });\r\n        console.log(\"video \", video);\r\n    }\r\n\r\n    const handleSubmitForm = async (e) => {\r\n        setIsLoading(true);\r\n        e.preventDefault();\r\n        let image_src = await toBase64(video.image_src);\r\n        let url = await toBase64(video.url);\r\n        image_src = image_src.toString().replace(/^data:(.*,)?/, \"\");\r\n        url = url.toString().replace(/^data:(.*,)?/, \"\");\r\n        const { name, collection } = video;\r\n        await axios.post(api_url_video + \"savevideo/idCollection/\" + collection, { name, url, image_src });\r\n        setIsLoading(false);\r\n    };\r\n    //handle form\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().required(\"name is required\"),\r\n        description: Yup.string().required(\"description is required\"),\r\n        collections: Yup.string().required(\"please select a collection\"),\r\n        imageSrc: Yup.string().required(\"please upload a thumbnail for the video\"),\r\n        videoForm: Yup.mixed().required(\"please upload a video\"),\r\n    });\r\n\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm({\r\n        resolver: yupResolver(validationSchema),\r\n    });\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <Container maxWidth=\"xl\">\r\n                <Box sx={{ bgcolor: '#fff', height: 'auto', borderRadius: '.90rem' }} >\r\n                    <form>\r\n                        <h1 className='form-title'>Add new Video</h1>\r\n                        <Divider />\r\n                        <h3 className='form-subtitle'>General informations</h3>\r\n                        <Divider />\r\n                        <div className='form-container-fields'>\r\n                            <TextField\r\n                                {...register(\"name\")}\r\n                                error={errors.name ? true : false}\r\n                                onChange={handleChangeForm}\r\n                                className=\"form-text-field\"\r\n                                id=\"standard-required\"\r\n                                label=\"Video Title\"\r\n                                variant=\"outlined\"\r\n                                name=\"name\"\r\n                            />\r\n                            <Typography variant=\"inherit\" className=\"text-danger\">\r\n                                {errors.name?.message}\r\n                            </Typography>\r\n                            <TextField\r\n                                {...register(\"description\")}\r\n                                error={errors.description ? true : false}\r\n                                onChange={handleChangeForm}\r\n                                className=\"form-text-field\"\r\n                                id=\"standard-required\"\r\n                                label=\"Video Description\"\r\n                                variant=\"outlined\"\r\n                                name='description'\r\n                            />\r\n                            <Typography variant=\"inherit\" className=\"text-danger\">\r\n                                {errors.description?.message}\r\n                            </Typography>\r\n                            <InputLabel style={{ width: '50vw' }} id=\"demo-simple-select-label\">collections</InputLabel>\r\n                            <Select\r\n                                {...register(\"collections\")}\r\n                                error={errors.collections ? true : false}\r\n                                style={{ width: '50vw' }}\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                label=\"collection\"\r\n                                onChange={handleChangeFormSelect}\r\n                                name='collections'\r\n                            >\r\n                                {collections.map((element, i) => {\r\n                                    console.log(element);\r\n                                    // Affichage\r\n                                    return (\r\n                                        <MenuItem key={element.id} value={element.id}>{element.name}</MenuItem>\r\n\r\n                                    );\r\n                                })}\r\n                            </Select>\r\n                            <Typography variant=\"inherit\" className=\"text-danger\">\r\n                                {errors.collections?.message}\r\n                            </Typography>\r\n                        </div>\r\n                        <Divider />\r\n                        <h3 className='form-subtitle'>Uploads</h3>\r\n                        <Divider />\r\n                        <div className='form-container-fields'>\r\n\r\n\r\n                            <ImageUpload\r\n                                {...register(\"imageSrc\")}\r\n                                error={errors.imageSrc ? true : false}\r\n                                name=\"imageSrc\"\r\n                                id=\"image-upload\"\r\n                                className=\"image-uploader\"\r\n                                handleImageSelect={handleImageSelect}\r\n                                imageSrc={imageSrc}\r\n                                setImageSrc={setImageSrc}\r\n                                style={{\r\n                                    width: 250,\r\n                                    height: 200,\r\n                                    background: 'rgb(83 109 254)',\r\n                                    borderRadius: '.90rem'\r\n                                }}\r\n                            />\r\n                            <label className='image-upload-title' htmlFor=\"image-upload\"> Video thumbnail <Typography variant=\"inherit\" className=\"text-danger\">\r\n                                {errors.imageSrc?.message}\r\n                            </Typography>\r\n                            </label>\r\n\r\n\r\n\r\n                            <input\r\n                            ref={register(\"videoForm\")}\r\n                                error={errors.videoForm ? true : false}\r\n                                name='video'\r\n                                accept=\"video/*\"\r\n                                capture=\"camcorder\"\r\n                                id=\"icon-button-video\"\r\n                                type=\"file\"\r\n                                onChange={handleVideoSelect}\r\n                                className='video-input'\r\n                            />\r\n                            <label htmlFor=\"icon-button-video\">\r\n                                <IconButton color=\"primary\" component=\"span\">\r\n                                    <Videocam />\r\n                                </IconButton>\r\n\r\n                                <label className='image-upload-title' htmlFor=\"image-upload\">{link}\r\n                                </label>\r\n                            </label>\r\n                            <Typography variant=\"inherit\" className=\"text-danger\">\r\n                                {errors.videoForm?.message}\r\n                            </Typography>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className='form-container-fields '>\r\n                            <Button type='submit' onClick={handleSubmit(handleSubmitForm)} className=' mb-d1 submit-form-button' variant=\"contained\" color='red'>Save video</Button>\r\n                        </div>\r\n                    </form>\r\n                </Box>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","E:\\languge_project\\react\\react-material-admin\\src\\pages\\login\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Collection\\CollectionDetail.js",["177","178"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport QRCode from \"./QrCode\";\r\nimport \"./collectionDetail.css\";\r\nimport { Card, CardContent, CircularProgress, Container, Grid, Typography } from \"@mui/material\";\r\n\r\n\r\nconst api = \"http://localhost:8080/vidqr/collections/\";\r\n\r\nconst CollectionDetail = () => {\r\n  const [collection, setCollection] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let { id } = useParams();\r\n  console.log(\"id \", id);\r\n  const getData = async () => {\r\n    setIsLoading(true);\r\n    const res = await axios.get(`${api}id/${id}`);\r\n    setCollection(res.data);\r\n    console.log(\"res \", res);\r\n    setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n\r\n  }, []);\r\n  if (isLoading) return (\r\n    <>\r\n      <CircularProgress size={30}\r\n        sx={{\r\n          color: \"#06b0ac\",\r\n          zIndex: 1,\r\n        }} />\r\n      <h2>Loading ...</h2>\r\n    </>\r\n  );\r\n  return (\r\n    <>\r\n      <Container className=\"container\">\r\n        <div className=\"collection-image-container\">\r\n          <img src={collection?.image_src} alt=\"No Image\" />\r\n        </div>\r\n      </Container>\r\n      <Container className=\"container\">\r\n        <Card>\r\n          <h2\r\n            className=\"title\"> {collection?.name} : {collection?.videos?.length} {collection?.videos?.length === 0 ? \"Empty Collection\" : collection.videos?.length === 1 ? \"Video\" : \"Videos\"} </h2>\r\n          <CardContent>\r\n            <Typography>{collection?.description}</Typography>\r\n          </CardContent>\r\n          <Grid className=\"container\" spacing={3}>\r\n            {\r\n              collection?.videos?.map(video => {\r\n                return (\r\n                  <Grid className=\"container-video\" item xs={6} md={4}>\r\n                    <img src={video.image_src} alt=\"\" />\r\n                    <h3 style={{ justifyContent: \"center\" }}>{video.name}</h3>\r\n                  </Grid>\r\n                );\r\n              })\r\n            }\r\n          </Grid>\r\n        </Card>\r\n      </Container>\r\n      <QRCode id_collection={collection.id} collection={collection} libelle={collection.name} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollectionDetail;\r\n","E:\\languge_project\\react\\react-material-admin\\src\\pages\\Collection\\Collection.js",["179","180","181","182","183","184","185","186","187","188"],"import PageTitle from \"../../components/PageTitle\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Checkbox,\r\n  CircularProgress,\r\n  FormControlLabel,\r\n  Grid,\r\n  Slide,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport \"./collection.css\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport List from \"@mui/material/List\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { ArrowBack as CloseIcon } from \"@material-ui/icons\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport ImageUpload from \"image-upload-react\";\r\nimport DialogCollection from \"../../components/Dialogs/DialogCollection\";\r\nimport VideoForm from \"../../components/forms/VideoForm\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst api = \"http://localhost:8080/vidqr/collections/\";\r\n\r\nexport default function Collection() {\r\n\r\n  const history = useHistory();\r\n  const [collections, setCollections] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [openAddVideo, setOpenAddVideo] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n  const [video, setVideo] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    image_src: null,\r\n  });\r\n  const [selectedItem, setSelectedItem] = useState([]);\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.name === \"image_src\") setVideo({ ...video, image_src: e.target.files[0] });\r\n    else {\r\n      setVideo({ ...video, [e.target.name]: e.target.value });\r\n    }\r\n    console.log(\"video \", video);\r\n  };\r\n  const handleDialog = () => {\r\n    setOpen(!open);\r\n  };\r\n  const handleDialogAddVideo = () => {\r\n    setOpenAddVideo(!openAddVideo);\r\n  };\r\n  const getData = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    console.log(\"Token \", token);\r\n    const res = await axios.get(api, {\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n      },\r\n    });\r\n    setCollections(res.data);\r\n  };\r\n  const columns = [\r\n    {\r\n      name: \"image_src\",\r\n      label: \"Image\",\r\n      options: {\r\n        customBodyRender: (image) => {\r\n          return (\r\n            <Avatar variant=\"rounded\" src={image}>\r\n            </Avatar>\r\n          );\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: \"name\",\r\n      label: \"Title\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n    {\r\n      name: \"description\",\r\n      label: \"Description\",\r\n      options: {\r\n        filter: true,\r\n        sort: true,\r\n      },\r\n    },\r\n  ];\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"name is required\"),\r\n    description: Yup.string().required(\"description is required\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const onSubmit = async (data) => {\r\n    setIsLoading(true);\r\n    console.log(\"data \", data);\r\n    let image_src = await toBase64(video.image_src);\r\n    image_src = image_src.toString().replace(/^data:(.*,)?/, \"\");\r\n    const { name, description } = video;\r\n    await axios.post(api, { name, description, image_src });\r\n    setIsLoading(false);\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n\r\n  const handleImageSelect = (e) => {\r\n    setImageSrc(URL.createObjectURL(e.target.files[0]));\r\n    setVideo({ ...video, image_src: e.target.files[0] });\r\n  };\r\n\r\n  const toBase64 = file => new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = error => reject(error);\r\n  });\r\n  const card = (\r\n    <React.Fragment>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: 20 }} color=\"text.primary\" gutterBottom>\r\n          Add Collection\r\n        </Typography>\r\n        <div className=\"form-container-fields-collection\">\r\n          <form>\r\n            <TextField\r\n              required\r\n              id=\"name\"\r\n              margin=\"dense\"\r\n              {...register(\"name\")}\r\n              error={errors.name ? true : false}\r\n              onChange={handleChange} className=\"form-text-field\" name=\"name\" label=\"Collection Name\"\r\n              variant=\"outlined\" />\r\n            <Typography variant=\"inherit\" className=\"text-danger\">\r\n              {errors.name?.message}\r\n            </Typography>\r\n            <TextField\r\n              margin=\"dense\"\r\n              {...register(\"description\")}\r\n              error={errors.description ? true : false}\r\n              onChange={handleChange} type=\"textArea\" name=\"description\" className=\"form-text-field\"\r\n              label=\"Description\"\r\n              variant=\"outlined\" />\r\n            <Typography variant=\"inherit\" className=\"text-danger\">\r\n              {errors.description?.message}\r\n            </Typography>\r\n            <ImageUpload\r\n              id=\"image-upload\"\r\n              className=\"image-uploader \"\r\n              handleImageSelect={handleImageSelect}\r\n              imageSrc={imageSrc}\r\n              setImageSrc={setImageSrc}\r\n              style={{\r\n                width: 250,\r\n                height: 200,\r\n                background: \"rgb(83 109 254)\",\r\n                borderRadius: \".90rem\",\r\n              }}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div className=\"btn-container-center\">\r\n          <Button style={{\r\n            marginTop: \"40px\",\r\n          }} type=\"submit\" onClick={handleSubmit(onSubmit)} className=\"btn btn-block\">\r\n            {\r\n              isLoading ? <CircularProgress size={30}\r\n                                            sx={{\r\n                                              color: \"#dce9dd\",\r\n                                              position: \"absolute\",\r\n                                              top: 4,\r\n                                              left: 336,\r\n                                              zIndex: 1,\r\n                                            }} />\r\n                : (\r\n                  <p>Save</p>\r\n                )\r\n            }\r\n          </Button>\r\n        </div>\r\n      </CardContent>\r\n    </React.Fragment>\r\n  );\r\n  const cardAddVideo = (\r\n    <React.Fragment>\r\n      <CardContent>\r\n        <VideoForm />\r\n      </CardContent>\r\n    </React.Fragment>\r\n  );\r\n  return (\r\n    <>\r\n      <PageTitle title=\"All the collections\" />\r\n      <Stack className=\"btn-container\" spacing={2} direction=\"row\">\r\n        <Button onClick={handleDialog} variant=\"outlined\">Add Collection</Button>\r\n        {\r\n          selectedItem.length > 0 && (\r\n            <Button onClick={() => {\r\n              if (selectedItem.length > 1) {\r\n                alert(\"Plz select one element \");\r\n              } else {\r\n                history.push(`/app/detail/collections/${collections[selectedItem[0]].id}`);\r\n              }\r\n            }} variant=\"outlined\">Detail</Button>\r\n          )\r\n        }\r\n        <Button onClick={handleDialogAddVideo} variant=\"outlined\">Add Videos</Button>\r\n      </Stack>\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <MUIDataTable\r\n            title=\"Collection List\"\r\n            data={collections}\r\n            columns={\r\n              columns\r\n            }\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              multiple: false,\r\n              onRowSelectionChange: (items, allRowsSelected, rowsSelected) => {\r\n                setSelectedItem(rowsSelected);\r\n                console.log(\"selected item \", selectedItem);\r\n              },\r\n            }}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <DialogCollection card={cardAddVideo} open={openAddVideo} handleDialog={handleDialogAddVideo}\r\n                        transition={Transition} />\r\n\r\n      <DialogCollection card={card} open={open} handleDialog={handleDialog} transition={Transition} />\r\n    </>\r\n  );\r\n}\r\n","E:\\languge_project\\react\\react-material-admin\\src\\components\\Layout\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\icons\\Icons.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\Sidebar.js",["189","190","191","192","193","194","195","196"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon, SupervisedUserCircle, SupervisorAccount,\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nconst structure = [\r\n  \r\n  { id: 2, label: \"Collections\", link: \"/app/collections\", icon: <SupervisorAccount /> },\r\n];\r\n\r\nfunction Sidebar({ location }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  // global\r\n  const { isSidebarOpened } = useLayoutState();\r\n  const layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  const [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\Dashboard.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Header\\Header.js",["197","198","199","200","201","202"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person as AccountIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport { Typography } from \"../Wrappers\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    role: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const username = localStorage.getItem(\"username\");\r\n    const role = localStorage.getItem(\"role\");\r\n    setUser({ ...user, username, role });\r\n  }, []);\r\n\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar}>\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype}>\r\n          Admin Dashboard\r\n        </Typography>\r\n        <div className={classes.grow} />\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              Welcome {user?.username?.toUpperCase()}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"#\"\r\n            >\r\n              Role : {user.role}\r\n            </Typography>\r\n          </div>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <div className={classes.profileMenuUser}>\r\n              <Typography\r\n                className={classes.profileMenuLink}\r\n                color=\"primary\"\r\n                onClick={() => signOut(userDispatch, props.history)}\r\n              >\r\n                Sign Out\r\n              </Typography>\r\n            </div>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","E:\\languge_project\\react\\react-material-admin\\src\\components\\Dialogs\\DialogCollection.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Collection\\QrCode.js",["203","204","205"],"import React, { useState } from \"react\";\r\nimport { Button, Card, CardContent, Container, Grid, TextField } from \"@mui/material\";\r\nimport \"./collectionDetail.css\";\r\nimport qrcode from \"qrcode\";\r\n\r\nconst QRCode = ({ id_collection, libelle, collection }) => {\r\n  const [text, setText] = useState(id_collection || \"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const getUrlsVideos = () => {\r\n    const jsonString = JSON.stringify(collection);\r\n    console.log(\"collection \",jsonString)\r\n    return jsonString;\r\n  };\r\n  const generateQrCode = async () => {\r\n    try {\r\n      const response = await qrcode.toDataURL(getUrlsVideos());\r\n      setImageUrl(response);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container className=\"container\">\r\n        <Card>\r\n          <h2 className=\"title\">Generate Download QR For collection of {libelle || \"Default name\"}</h2>\r\n          <CardContent>\r\n            <Grid container spacing={2}>\r\n              <Grid className=\"grid-center\" item xl={4} lg={4} md={6} sm={12} xs={12}>\r\n                <Button className=\"btn\" variant=\"contained\"\r\n                        color=\"primary\" onClick={() => generateQrCode()}>Generate</Button>\r\n                <div className=\"qr-image-container\">\r\n                  {imageUrl ? (\r\n                    <a href={imageUrl} download>\r\n                      <img title=\"Download the QR Code\" src={imageUrl} alt=\"img\" />\r\n                    </a>) : null}\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default QRCode;\r\n","E:\\languge_project\\react\\react-material-admin\\src\\components\\PageTitle\\PageTitle.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\mock.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\Dot.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Header\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\icons\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",["206"],"import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { Inbox as InboxIcon } from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Dot from \"../Dot\";\r\n\r\nexport default function SidebarLink({\r\n                                      link,\r\n                                      icon,\r\n                                      label,\r\n                                      children,\r\n                                      location,\r\n                                      isSidebarOpened,\r\n                                      nested,\r\n                                      type,\r\n                                    }) {\r\n  const classes = useStyles();\r\n\r\n  // local\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const isLinkActive = link && (location.pathname === link || location.pathname.indexOf(link) !== -1);\r\n\r\n  if (type === \"title\")\r\n    return (\r\n      <Typography\r\n        className={classnames(classes.linkText, classes.sectionTitle, {\r\n          [classes.linkTextHidden]: !isSidebarOpened,\r\n        })}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    );\r\n\r\n  if (link && link.includes(\"http\")) {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <a className={classes.externalLink} href={link}>\r\n          <ListItemIcon\r\n            className={classnames(classes.linkIcon, {\r\n              [classes.linkIconActive]: isLinkActive,\r\n            })}\r\n          >\r\n            {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            classes={{\r\n              primary: classnames(classes.linkText, {\r\n                [classes.linkTextActive]: isLinkActive,\r\n                [classes.linkTextHidden]: !isSidebarOpened,\r\n              }),\r\n            }}\r\n            primary={label}\r\n          />\r\n        </a>\r\n      </ListItem>\r\n    );\r\n  }\r\n  if (!children)\r\n    return (\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        to={link}\r\n        className={classes.link}\r\n        classes={{\r\n          root: classnames(classes.linkRoot, {\r\n            [classes.linkActive]: isLinkActive && !nested,\r\n            [classes.linkNested]: nested,\r\n          }),\r\n        }}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {nested ? <Dot color={isLinkActive && \"primary\"} /> : icon}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        button\r\n        component={link && Link}\r\n        onClick={toggleCollapse}\r\n        className={classes.link}\r\n        to={link}\r\n        disableRipple\r\n      >\r\n        <ListItemIcon\r\n          className={classnames(classes.linkIcon, {\r\n            [classes.linkIconActive]: isLinkActive,\r\n          })}\r\n        >\r\n          {icon ? icon : <InboxIcon />}\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          classes={{\r\n            primary: classnames(classes.linkText, {\r\n              [classes.linkTextActive]: isLinkActive,\r\n              [classes.linkTextHidden]: !isSidebarOpened,\r\n            }),\r\n          }}\r\n          primary={label}\r\n        />\r\n      </ListItem>\r\n      {children && (\r\n        <Collapse\r\n          in={isOpen && isSidebarOpened}\r\n          timeout=\"auto\"\r\n          unmountOnExit\r\n          className={classes.nestedList}\r\n        >\r\n          <List component=\"div\" disablePadding>\r\n            {children.map(childrenLink => (\r\n              <SidebarLink\r\n                key={childrenLink && childrenLink.link}\r\n                location={location}\r\n                isSidebarOpened={isSidebarOpened}\r\n                classes={classes}\r\n                nested\r\n                {...childrenLink}\r\n              />\r\n            ))}\r\n          </List>\r\n        </Collapse>\r\n      )}\r\n    </>\r\n  );\r\n\r\n  // ###########################################################\r\n\r\n  function toggleCollapse(e) {\r\n    if (isSidebarOpened) {\r\n      e.preventDefault();\r\n      setIsOpen(!isOpen);\r\n    }\r\n  }\r\n}\r\n","E:\\languge_project\\react\\react-material-admin\\src\\components\\Widget\\Widget.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Wrappers\\Wrappers.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\PageTitle\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Widget\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"E:\\languge_project\\react\\react-material-admin\\src\\pages\\users\\users.js",[],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":15},{"ruleId":"211","severity":1,"message":"212","line":24,"column":10,"nodeType":"213","messageId":"214","endLine":24,"endColumn":15},{"ruleId":"211","severity":1,"message":"215","line":31,"column":9,"nodeType":"213","messageId":"214","endLine":31,"endColumn":24},{"ruleId":"211","severity":1,"message":"216","line":40,"column":10,"nodeType":"213","messageId":"214","endLine":40,"endColumn":17},{"ruleId":"211","severity":1,"message":"217","line":9,"column":10,"nodeType":"213","messageId":"214","endLine":9,"endColumn":13},{"ruleId":"211","severity":1,"message":"218","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":21},{"ruleId":"211","severity":1,"message":"219","line":40,"column":12,"nodeType":"213","messageId":"214","endLine":40,"endColumn":21},{"ruleId":"220","severity":1,"message":"221","line":26,"column":6,"nodeType":"222","endLine":26,"endColumn":8,"suggestions":"223"},{"ruleId":"224","severity":1,"message":"225","line":41,"column":11,"nodeType":"226","endLine":41,"endColumn":61},{"ruleId":"211","severity":1,"message":"227","line":9,"column":3,"nodeType":"213","messageId":"214","endLine":9,"endColumn":7},{"ruleId":"211","severity":1,"message":"228","line":11,"column":3,"nodeType":"213","messageId":"214","endLine":11,"endColumn":11},{"ruleId":"211","severity":1,"message":"229","line":13,"column":3,"nodeType":"213","messageId":"214","endLine":13,"endColumn":19},{"ruleId":"211","severity":1,"message":"230","line":19,"column":8,"nodeType":"213","messageId":"214","endLine":19,"endColumn":14},{"ruleId":"211","severity":1,"message":"231","line":20,"column":8,"nodeType":"213","messageId":"214","endLine":20,"endColumn":12},{"ruleId":"211","severity":1,"message":"232","line":21,"column":8,"nodeType":"213","messageId":"214","endLine":21,"endColumn":14},{"ruleId":"211","severity":1,"message":"233","line":22,"column":8,"nodeType":"213","messageId":"214","endLine":22,"endColumn":15},{"ruleId":"211","severity":1,"message":"234","line":23,"column":8,"nodeType":"213","messageId":"214","endLine":23,"endColumn":18},{"ruleId":"211","severity":1,"message":"235","line":25,"column":23,"nodeType":"213","messageId":"214","endLine":25,"endColumn":32},{"ruleId":"211","severity":1,"message":"236","line":26,"column":19,"nodeType":"213","messageId":"214","endLine":26,"endColumn":29},{"ruleId":"211","severity":1,"message":"237","line":5,"column":24,"nodeType":"213","messageId":"214","endLine":5,"endColumn":41},{"ruleId":"211","severity":1,"message":"238","line":6,"column":17,"nodeType":"213","messageId":"214","endLine":6,"endColumn":31},{"ruleId":"211","severity":1,"message":"239","line":7,"column":17,"nodeType":"213","messageId":"214","endLine":7,"endColumn":31},{"ruleId":"211","severity":1,"message":"240","line":8,"column":16,"nodeType":"213","messageId":"214","endLine":8,"endColumn":25},{"ruleId":"211","severity":1,"message":"241","line":9,"column":21,"nodeType":"213","messageId":"214","endLine":9,"endColumn":32},{"ruleId":"211","severity":1,"message":"242","line":10,"column":19,"nodeType":"213","messageId":"214","endLine":10,"endColumn":30},{"ruleId":"211","severity":1,"message":"243","line":11,"column":18,"nodeType":"213","messageId":"214","endLine":11,"endColumn":25},{"ruleId":"211","severity":1,"message":"244","line":23,"column":8,"nodeType":"213","messageId":"214","endLine":23,"endColumn":11},{"ruleId":"211","severity":1,"message":"245","line":33,"column":7,"nodeType":"213","messageId":"214","endLine":33,"endColumn":20},{"ruleId":"211","severity":1,"message":"246","line":65,"column":8,"nodeType":"213","messageId":"214","endLine":65,"endColumn":21},{"ruleId":"211","severity":1,"message":"247","line":67,"column":8,"nodeType":"213","messageId":"214","endLine":67,"endColumn":29},{"ruleId":"211","severity":1,"message":"248","line":69,"column":8,"nodeType":"213","messageId":"214","endLine":69,"endColumn":20},{"ruleId":"211","severity":1,"message":"249","line":69,"column":22,"nodeType":"213","messageId":"214","endLine":69,"endColumn":35},{"ruleId":"220","severity":1,"message":"250","line":78,"column":6,"nodeType":"222","endLine":78,"endColumn":8,"suggestions":"251"},{"ruleId":"211","severity":1,"message":"252","line":2,"column":54,"nodeType":"213","messageId":"214","endLine":2,"endColumn":63},{"ruleId":"211","severity":1,"message":"253","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":14},{"ruleId":"211","severity":1,"message":"254","line":7,"column":16,"nodeType":"213","messageId":"214","endLine":7,"endColumn":23},{"ruleId":"211","severity":1,"message":"255","line":4,"column":3,"nodeType":"213","messageId":"214","endLine":4,"endColumn":10},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'isAuthenticated' is assigned a value but never used.","'clicked' is assigned a value but never used.","'doc' is defined but never used.","'PhotoCamera' is defined but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["258"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Card' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Dialog' is defined but never used.","'List' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'Controller' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","'UIElementsIcon' is defined but never used.","'TableIcon' is defined but never used.","'SupportIcon' is defined but never used.","'LibraryIcon' is defined but never used.","'FAQIcon' is defined but never used.","'Dot' is defined but never used.","'notifications' is assigned a value but never used.","'isMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'isSearchOpen' is assigned a value but never used.","'setSearchOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array. You can also do a functional update 'setUser(u => ...)' if you only need 'user' in the 'setUser' call.",["259"],"'TextField' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'Divider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},"Update the dependencies array to be: [getData]",{"range":"264","text":"265"},"Update the dependencies array to be: [user]",{"range":"266","text":"267"},[799,801],"[getData]",[1946,1948],"[user]"]